two pointer:

2 sum

   return index or return value
  
3 sum   
   start [(point1 point2) of 2 sum]   direction ->
   [(point1 point2) of 2 sum]  start  direction <-

3 sum closest
   
4 sum
k sum
triangle count
trapping rain water
    i j  left  right
    if(height[left]<height[right]){
        update left (if)
        i++
    }else{
        update right (if)
        j--
    }

container with most water


partition

partition-array
sort colors
partition Array by Odd and Even
Sort letters by Case
Valid Palindrome